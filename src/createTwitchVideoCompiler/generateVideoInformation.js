// @flow

import { type TwitchClip } from './getClips';

export default function generateVideoInformation(
  configuration: $FlowFixMe,
  clips: Array<TwitchClip>,
  elapsedTime: number,
): {
  description: string,
  tags: string,
} {
  const minutes = Number((elapsedTime / 60).toFixed(0));
  const seconds = Number((elapsedTime % 60).toFixed(0));
  const games = clips.map((clip) => clip.game);
  const broadcasters = clips.map((clip) => clip.broadcaster.name);
  const tags = Array.from(new Set(games.concat(broadcasters))).join(',');

  const description = `This video is generated by node.js application!

--Details--
Clips: ${configuration.size}
Period: ${configuration.period}
Language: ${configuration.language || 'Not Specified'}
Trending: ${configuration.trending ? 'true' : 'false'}
Game: ${configuration.game || 'Not Specified'}
Channel: ${configuration.channel || 'Not Specified'}
Generated in ${minutes < 10 ? `0${minutes}` : minutes}:${
    seconds < 10 ? `0${seconds}` : seconds
  } minutes.

--References--
${clips
    .map(
      (clip, index) => `
--Clip ${index + 1}--
| Title: ${clip.title}
| Game: ${clip.game}
| Streamer: ${clip.broadcaster.channel_url}`,
    )
    .join('\n')}`;

  return { description, tags };
}
